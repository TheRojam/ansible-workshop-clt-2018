---

- name: setup CLT lab environment
  hosts: localhost
  gather_facts: false

  vars:
    ami: ami-97e953f8
    subnet_id: subnet-f10939bb
    attendee_prefix: attendee_

  tasks:

  - name: include aws credentials
    include_vars:
      file: awscreds.yml

  - name: include attendees
    include_vars:
      file: attendees.yml

  - name: create ec2 key pairs
    ec2_key:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      name: "{{ attendee_prefix }}{{ item }}"
    with_sequence: start=0 end="{{ attendees|length - 1 }}" format="%02d"
    register: ec2_keys

  - name: save private keys
    copy:
      content: "{{ item.key.private_key }}" 
      dest: "./{{ item.key.name }}.pem" 
      mode: 0600
    when: item.changed
    with_items: "{{ ec2_keys.results }}"

  - name: send private keys
    mail:
      from: clt_ansible@domov.de
      to: "{{ attendees[item.item | int] }}"
      attach: "./{{ item.key.name }}.pem"
      subject: "Private key file"
    when: item.changed
    with_items: "{{ ec2_keys.results }}"

  - name: create ec2 instances
    ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      assign_public_ip: yes
      count: 2
#      id: "{{ item.key.name }}"
      image: "{{ ami }}"
      instance_tags:
        Name: "{{ item.key.name }}"
        Owner: "{{ attendees[item.item | int] }}"
      instance_type: t2.micro
      key_name: "{{ item.key.name }}"
      user_data: "{{lookup('file', 'user_data.sh')}}"
      vpc_subnet_id: "{{ subnet_id }}"
    with_items: "{{ ec2_keys.results }}"
    register: ec2_instances

  - name: template inventories
    template:
      src: inventory.j2
      dest: "./{{ attendee_prefix }}{{ item.item.item }}_inventory.txt"
    with_items: "{{ ec2_instances.results }}"

  - name: send inventories
    mail:
      from: clt_ansible@domov.de
      to: "{{ attendees[item.item.item | int] }}"
      subject: "Instance Inventory"
      attach: "./{{ attendee_prefix }}{{ item.item.item }}_inventory.txt"
    when: item.changed
    with_items: "{{ ec2_instances.results }}"

# dedizierte SG mit TCP 22, 80, 443
